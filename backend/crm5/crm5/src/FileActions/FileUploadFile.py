# --------------------------------------------------------------------------------
# stubs for action FileUploadFile generated by Altair One content definition compiler.
# FileUploadFilePre  [optional] precheck and setup resources required for action.
# FileUploadFileRun  business logic of action and set outputs.
# FileUploadFilePost [optional] postchecks and free resources aquired by action.
# *** DO NOT MODIFY STUB DEFINITIONS ***.
# --------------------------------------------------------------------------------

#Created from PythonActionSrcTemplate

from altair.system import ActionContext
from altair.crm3 import FileUploadFileInputs
from altair.crm3 import FileUploadFileOutputs
import os
from altair.system.Fs import Fs
from time import time

async def FileUploadFileRun(inputs: FileUploadFileInputs, outputs: FileUploadFileOutputs, context: ActionContext):
    '''Implement business logic of action and set outputs

    Args:
        inputs (FileUploadFileInputs): action inputs
        outputs (FileUploadFileOutputs): action outputs
        context (ActionContext): action context
    '''
    try:
        parent = (await Fs.info(context.session, path= '/Users/smadala')).content;
        now = int(time() * 1000)
        name = inputs.name
        __file__ = inputs.filepath
        action = await parent.uploadFile(filePath=os.path.abspath(__file__), name=name,
                                                   contentType='altair.system.FileEntity', data={"fileName": inputs.name})
        outputs.file = action.ref
    except Exception as e:
        import traceback
        print(e)
        print(traceback.format_exc())

