# --------------------------------------------------------------------------------
# stubs for action CustomerCreateCustomerCustomFiles generated by Altair One content definition compiler.
# CustomerCreateCustomerCustomFilesPre  [optional] precheck and setup resources required for action.
# CustomerCreateCustomerCustomFilesRun  business logic of action and set outputs.
# CustomerCreateCustomerCustomFilesPost [optional] postchecks and free resources aquired by action.
# *** DO NOT MODIFY STUB DEFINITIONS ***.
# --------------------------------------------------------------------------------

#Created from PythonActionSrcTemplate

from altair.system import ActionContext,Content
from altair.crm5 import CustomerCreateCustomerCustomFilesInputs,CustomFileEntity
from altair.crm5 import CustomerCreateCustomerCustomFilesOutputs


async def CustomerCreateCustomerCustomFilesRun(inputs: CustomerCreateCustomerCustomFilesInputs, outputs: CustomerCreateCustomerCustomFilesOutputs, context: ActionContext):
    '''Implement business logic of action and set outputs

    Args:
        inputs (CustomerCreateCustomerCustomFilesInputs): action inputs
        outputs (CustomerCreateCustomerCustomFilesOutputs): action outputs
        context (ActionContext): action context
    '''
    print(inputs.fileObj)
    print(inputs.fileObj["contentRef"])
    customerRef = await Content.getByRef(session=context.session, contentRef=inputs.fileObj["contentRef"])
    # fileRef = await Content.getByRef(session=context.session, contentRef=inputs.fileObj['fileRef'])
    
    customFile = await CustomFileEntity.createFile(session=context.session,contentRef=inputs.fileObj["contentRef"],description=inputs.fileObj["description"],islock=inputs.fileObj["isLock"],fileRef=inputs.fileObj["fileRef"])
    print(customFile)
    
    await customerRef.content.addCustomer_customFiles(customer_customFiles=customFile.content)
    await context.session.save()