# --------------------------------------------------------------------------------
# stubs for action CustomerSearchCustomer generated by Altair One content definition compiler.
# CustomerSearchCustomerPre  [optional] precheck and setup resources required for action.
# CustomerSearchCustomerRun  business logic of action and set outputs.
# CustomerSearchCustomerPost [optional] postchecks and free resources aquired by action.
# *** DO NOT MODIFY STUB DEFINITIONS ***.
# --------------------------------------------------------------------------------

#Created from PythonActionSrcTemplate

from altair.system import ActionContext,Search
from altair.crm5 import CustomerSearchCustomerInputs
from altair.crm5 import CustomerSearchCustomerOutputs


async def CustomerSearchCustomerRun(inputs: CustomerSearchCustomerInputs, outputs: CustomerSearchCustomerOutputs, context: ActionContext):
    '''Implement business logic of action and set outputs

    Args:
        inputs (CustomerSearchCustomerInputs): action inputs
        outputs (CustomerSearchCustomerOutputs): action outputs
        context (ActionContext): action context
    '''
    # --------- here only search in name column -------------

    print("value is", inputs.name)
    # filterVal = 'name like "'+inputs.name + \
    #     '" && system.contentType in ["altair.crm5.Customer"]'
    
    filterVal ='name like "'+inputs.name+'" && system.contentType in ["name", "email", "altair.crm5.Customer"]'
    print("filterVal :", filterVal)
    
    result = await Search.search(session=context.session,
                                 filter=filterVal,
                                 sort=[{
                                     "field": "system.createdTime",
                                     "direction": "DESC"
                                 }],
                                 pagination={
                                     "limit": 10,
                                     "offset": 0
                                 }
                                 )
   
    outputs.customers = result.entities

