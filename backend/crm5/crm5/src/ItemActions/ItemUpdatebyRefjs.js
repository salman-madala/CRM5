// --------------------------------------------------------------------------------
// stubs for action ItemUpdatebyRefjs generated by Altair One content definition compiler.
// ItemUpdatebyRefjsPre  [optional] precheck and setup resources required for action.
// ItemUpdatebyRefjsRun  business logic of action and set outputs.
// ItemUpdatebyRefjsPost [optional] postchecks and free resources aquired by action.
// *** DO NOT MODIFY STUB DEFINITIONS ***.
// --------------------------------------------------------------------------------
//Created from JsActionSrcTemplate
/**
 * @typedef {import("../../apis/js/altair/crm1/ItemActions/ItemUpdatebyRefjs").ItemUpdatebyRefjsInputs} ItemUpdatebyRefjsInputs
 * @typedef {import("../../apis/js/altair/crm1/ItemActions/ItemUpdatebyRefjs").ItemUpdatebyRefjsOutputs} ItemUpdatebyRefjsOutputs
 * @typedef {import("@altair/system").ActionContext} ActionContext
 */


/**
 * Implement business logic of action and set outputs
 * 
 * @param { ItemUpdatebyRefjsInputs} inputs action inputs
 * @param { ItemUpdatebyRefjsOutputs} outputs action outputs
 * @param {ActionContext} context action context
 */
async function  ItemUpdatebyRefjsRun(inputs, outputs, context){

     
     const Content = require("@altair/system").Content;

     const session = context.session;
     const item = inputs.itemRef;
     console.log("item value",item);

     const output = await Content.findByAttributes({session: session,
           contentType: "altair.crm1.Item",
           data: {_key: item.id}
     });

     var contentVal = output.get('contents')[0];

     console.log("before student setting details---------\n", contentVal);
     contentVal.set("name", item.name);
     contentVal.set("cost", item.cost);

     console.log("----------------------------------------------------------------")
     console.log("before update : ", contentVal)
     console.log("----------------------------------------------------------------")

     await contentVal.update({})


}


module.exports = {
     ItemUpdatebyRefjsRun}