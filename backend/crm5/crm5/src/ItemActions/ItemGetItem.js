// --------------------------------------------------------------------------------
// stubs for action ItemGetItem generated by Altair One content definition compiler.
// ItemGetItemPre  [optional] precheck and setup resources required for action.
// ItemGetItemRun  business logic of action and set outputs.
// ItemGetItemPost [optional] postchecks and free resources aquired by action.
// *** DO NOT MODIFY STUB DEFINITIONS ***.
// --------------------------------------------------------------------------------
//Created from JsActionSrcTemplate
/**
 * @typedef {import("../../apis/js/altair/crm1/ItemActions/ItemGetItem").ItemGetItemInputs} ItemGetItemInputs
 * @typedef {import("../../apis/js/altair/crm1/ItemActions/ItemGetItem").ItemGetItemOutputs} ItemGetItemOutputs
 * @typedef {import("@altair/system").ActionContext} ActionContext
 */


/**
 * Implement business logic of action and set outputs
 * 
 * @param { ItemGetItemInputs} inputs action inputs
 * @param { ItemGetItemOutputs} outputs action outputs
 * @param {ActionContext} context action context
 */
async function  ItemGetItemRun(inputs, outputs, context){

     const Content = require("@altair/system").Content;
     const ContentRef = require("@altair/system").ContentRef;
     let testRef = new ContentRef({session:context.session})
        testRef.id = inputs.id
        testRef.contentType = "altair.crm1.Item"
     let getByRefOutputs = await Content.getByRef({contentRef:testRef, session:context.session})
     outputs.itemRef = getByRefOutputs.content

}


module.exports = {
     ItemGetItemRun}