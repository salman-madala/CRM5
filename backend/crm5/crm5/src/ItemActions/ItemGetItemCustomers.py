# --------------------------------------------------------------------------------
# stubs for action ItemGetItemCustomers generated by Altair One content definition compiler.
# ItemGetItemCustomersPre  [optional] precheck and setup resources required for action.
# ItemGetItemCustomersRun  business logic of action and set outputs.
# ItemGetItemCustomersPost [optional] postchecks and free resources aquired by action.
# *** DO NOT MODIFY STUB DEFINITIONS ***.
# --------------------------------------------------------------------------------

# Created from PythonActionSrcTemplate

from altair.system import ActionContext,Content,ContentRef
from altair.crm5 import ItemGetItemCustomersInputs
from altair.crm5 import ItemGetItemCustomersOutputs


async def ItemGetItemCustomersRun(inputs: ItemGetItemCustomersInputs, outputs: ItemGetItemCustomersOutputs, context: ActionContext):
    '''Implement business logic of action and set outputs

    Args:
        inputs (ItemGetItemCustomersInputs): action inputs
        outputs (ItemGetItemCustomersOutputs): action outputs
        context (ActionContext): action context
    '''
    output = await Content.findByAttributes(
        session=context.session,
        contentType='altair.crm5.Item',
        data={"_key": inputs.id}
    )
    val = output.contents[0]

    # here we are getting the orders data  based on the  item
    rels = await val.getRelations(direction="IN", relationNames=["order_items"])
    orders = await val.getRelatedContents(direction="IN", relationNames=["order_items"])

    customersSet = set() # for to remove dulplicate ids
    for order in orders:
        customerInfo = await order.getRelatedContents(direction="OUT", relationNames=["order_customer"])
        customersSet.add(customerInfo[0].id)
       
    customers=[] 
    for customerId in customersSet:
        ref = ContentRef(session=context.session)
        ref.id = customerId
        ref.contentType = "altair.crm5.Customer"
        customerRef = await Content.getByRef(contentRef=ref, session=context.session)
        customers.append(customerRef)
    
    outputs.customers = customers

