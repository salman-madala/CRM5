// --------------------------------------------------------------------------------
// stubs for action OrderDownloadInvoice generated by Altair One content definition compiler.
// OrderDownloadInvoicePre  [optional] precheck and setup resources required for action.
// OrderDownloadInvoiceRun  business logic of action and set outputs.
// OrderDownloadInvoicePost [optional] postchecks and free resources aquired by action.
// *** DO NOT MODIFY STUB DEFINITIONS ***.
// --------------------------------------------------------------------------------
//Created from JsActionSrcTemplate
/**
 * @typedef {import("../../apis/js/altair/crm1/OrderActions/OrderDownloadInvoice").OrderDownloadInvoiceInputs} OrderDownloadInvoiceInputs
 * @typedef {import("../../apis/js/altair/crm1/OrderActions/OrderDownloadInvoice").OrderDownloadInvoiceOutputs} OrderDownloadInvoiceOutputs
 * @typedef {import("@altair/system").ActionContext} ActionContext
 */


/**
 * Implement business logic of action and set outputs
 * 
 * @param { OrderDownloadInvoiceInputs} inputs action inputs
 * @param { OrderDownloadInvoiceOutputs} outputs action outputs
 * @param {ActionContext} context action context
 */
async function  OrderDownloadInvoiceRun(inputs, outputs, context){

     var session = context.session;
     const parentDir = (await Fs.info({session, path: "/"})).content;

     const fs = require('fs');
     const os = require('os');
     const f = Date.now().toString()
     fs.writeFileSync(os.tmpdir() + "/" + f, f);
     const action = await parentDir.uploadFile({
         filePath: os.tmpdir() + "/" + f,
         contentType: "altair.system.FileEntity",
         name: "UploadFileTest_" + Date.now() + ".js",
         data: {"something": Date.now()}
     });
     const {file} = await action.waitForCompletion();
     expect(file instanceof FileEntity).to.be.equal(true);
     const filePath = os.tmpdir() + "/download_" + Date.now();
     await file.download({filePath})
     const actual = fs.readFileSync(filePath).toString();
     expect(actual).to.be.equal(f);


}


module.exports = {
     OrderDownloadInvoiceRun}