// --------------------------------------------------------------------------------
// stubs for action OrderDeleteOrderItem generated by Altair One content definition compiler.
// OrderDeleteOrderItemPre  [optional] precheck and setup resources required for action.
// OrderDeleteOrderItemRun  business logic of action and set outputs.
// OrderDeleteOrderItemPost [optional] postchecks and free resources aquired by action.
// *** DO NOT MODIFY STUB DEFINITIONS ***.
// --------------------------------------------------------------------------------
//Created from JsActionSrcTemplate
/**
 * @typedef {import("../../apis/js/altair/crm1/OrderActions/OrderDeleteOrderItem").OrderDeleteOrderItemInputs} OrderDeleteOrderItemInputs
 * @typedef {import("../../apis/js/altair/crm1/OrderActions/OrderDeleteOrderItem").OrderDeleteOrderItemOutputs} OrderDeleteOrderItemOutputs
 * @typedef {import("@altair/system").ActionContext} ActionContext
 */


/**
 * Implement business logic of action and set outputs
 * 
 * @param { OrderDeleteOrderItemInputs} inputs action inputs
 * @param { OrderDeleteOrderItemOutputs} outputs action outputs
 * @param {ActionContext} context action context
 */
async function OrderDeleteOrderItemRun(inputs, outputs, context) {
     const Content = require("@altair/system").Content;
     const ContentRef = require("@altair/system").ContentRef;
     var session = context.session;
     let testRef = new ContentRef({ session: context.session })
     
     testRef.id = inputs.orderRef.id;
     testRef.contentType = "altair.crm1.Order"
     let getByRefOutputs = await Content.getByRef({ contentRef: testRef, session: context.session })
     let content1 = getByRefOutputs.content;
     content1.removeOrder_items(inputs.itemRef);
     // const rel = content1.unrelate({ to: inputs.itemRef, relationType: "order_items" });
     // const rel = content1.unRelation({to:val, relationType: "order_items"});
     await session.save();

}


module.exports = {
     OrderDeleteOrderItemRun
}